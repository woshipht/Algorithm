package 漫画算法.哈希表结构;

public class 哈希表的知识点 {
    /*
      1.哈希函数
        ①哈希表包含key-value对，且哈希表本身是一个数组，其存在下标，哈希函数就是将对象的hashcode转化为哈希表数组下标的函数
          一般公式为：index = HashCode(Key) % Array.length

      2.哈希表的写入操作
        假设我们写入一队键值对，hashMap.put("990813","PHT")
        ①通过哈希函数，将Key值转化成数组下标
        ②如果数组下标位置没有元素，就直接把这个键值对信息放到数组的该下标位置
        ③如果数组下标位置已经有元素，就会出现 哈希冲突！

      3.哈希冲突
        解决方法一般2种，开放寻址法，链表法(JAVA中HashMap就是链表法)
        ①开放寻址法：当该Key值的数组下标已经被占用时，就可以寻找该下标的下一个位置，重复操作直到找到一个空下标位置为止
        ②链表法：每个数组的下标位置不但包含键值对信息，同时还是一个链表的头结点！如果在该下标位置又来了一对新的键值对信息，就可以将这对新键值对直接放到这个链表中！

      4.哈希表的读操作
        假设我们想通过给定Key找到对应的Value，hashMap.get("990813")
        ①通过哈希函数，将Key值转化成数组下标
        ②找到该数组下标中的对应信息，如果第一个头结点的键值对不匹配，就继续深入链表，直到找到匹配的键值对为止！

      5.哈希表的扩容
        ①影响哈希表扩容的因素有2个：
        [1]Capacity,即HashMap的长度
        [2]LoadFactor,即HashMap的负载因子，默认值为0.75f
        ②进行扩容的条件：HashMap.Size >= Capacity * LoadFactor
        ③扩容的步骤：
        [1]生成新数组，长度为原来的两倍
        [2]重新进行Hash，因为Hash函数变化
     */
}
